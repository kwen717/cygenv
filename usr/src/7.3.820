To: vim_dev@googlegroups.com
Subject: Patch 7.3.820
Fcc: outbox
From: Bram Moolenaar <Bram@moolenaar.net>
Mime-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit
------------

Patch 7.3.820
Problem:    Build errors and warnings when building with small features and
	    Lua, Perl or Ruby.
Solution:   Add #ifdefs and UNUSED.
Files:	    src/if_perl.xs, src/if_lua.c, src/if_ruby.c


*** ../vim-7.3.819/src/if_perl.xs	2013-02-06 19:58:38.000000000 +0100
--- src/if_perl.xs	2013-02-14 19:16:00.000000000 +0100
***************
*** 600,608 ****
   */
      char_u *
  eval_to_string(arg, nextcmd, dolist)
!     char_u	*arg;
!     char_u	**nextcmd;
!     int		dolist;
  {
      return NULL;
  }
--- 600,608 ----
   */
      char_u *
  eval_to_string(arg, nextcmd, dolist)
!     char_u	*arg UNUSED;
!     char_u	**nextcmd UNUSED;
!     int		dolist UNUSED;
  {
      return NULL;
  }
*** ../vim-7.3.819/src/if_lua.c	2012-10-14 03:41:54.000000000 +0200
--- src/if_lua.c	2013-02-14 19:15:29.000000000 +0100
***************
*** 845,852 ****
  }
  
      static int
! luaV_dict_iter (lua_State *L)
  {
      hashitem_T *hi = (hashitem_T *) lua_touserdata(L, lua_upvalueindex(2));
      int n = lua_tointeger(L, lua_upvalueindex(3));
      dictitem_T *di;
--- 845,853 ----
  }
  
      static int
! luaV_dict_iter (lua_State *L UNUSED)
  {
+ #ifdef FEAT_EVAL
      hashitem_T *hi = (hashitem_T *) lua_touserdata(L, lua_upvalueindex(2));
      int n = lua_tointeger(L, lua_upvalueindex(3));
      dictitem_T *di;
***************
*** 860,865 ****
--- 861,869 ----
      lua_pushinteger(L, n - 1);
      lua_replace(L, lua_upvalueindex(3));
      return 2;
+ #else
+     return 0;
+ #endif
  }
  
      static int
*** ../vim-7.3.819/src/if_ruby.c	2012-11-24 13:38:56.000000000 +0100
--- src/if_ruby.c	2013-02-14 22:18:50.000000000 +0100
***************
*** 1210,1230 ****
      return height;
  }
  
! static VALUE window_width(VALUE self)
  {
!     win_T *win = get_win(self);
! 
!     return INT2NUM(win->w_width);
  }
  
! static VALUE window_set_width(VALUE self, VALUE width)
  {
      win_T *win = get_win(self);
      win_T *savewin = curwin;
  
      curwin = win;
      win_setwidth(NUM2INT(width));
      curwin = savewin;
      return width;
  }
  
--- 1210,1230 ----
      return height;
  }
  
! static VALUE window_width(VALUE self UNUSED)
  {
!     return INT2NUM(W_WIDTH(get_win(self)));
  }
  
! static VALUE window_set_width(VALUE self UNUSED, VALUE width)
  {
+ #ifdef FEAT_VERTSPLIT
      win_T *win = get_win(self);
      win_T *savewin = curwin;
  
      curwin = win;
      win_setwidth(NUM2INT(width));
      curwin = savewin;
+ #endif
      return width;
  }
  
*** ../vim-7.3.819/src/version.c	2013-02-14 22:11:31.000000000 +0100
--- src/version.c	2013-02-14 22:19:09.000000000 +0100
***************
*** 727,728 ****
--- 727,730 ----
  {   /* Add new patch number below this line */
+ /**/
+     820,
  /**/

-- 
Did Adam and Eve have navels?

 /// Bram Moolenaar -- Bram@Moolenaar.net -- http://www.Moolenaar.net   \\\
///        sponsor Vim, vote for features -- http://www.Vim.org/sponsor/ \\\
\\\  an exciting new programming language -- http://www.Zimbu.org        ///
 \\\            help me help AIDS victims -- http://ICCF-Holland.org    ///
