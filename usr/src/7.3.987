To: vim_dev@googlegroups.com
Subject: Patch 7.3.987
Fcc: outbox
From: Bram Moolenaar <Bram@moolenaar.net>
Mime-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit
------------

Patch 7.3.987
Problem:    No easy to run an individual test.  Tests 64 fails when
	    'encoding' is not utf-8.
Solution:   Add individual test targets to the Makefile.  Move some lines from
	    test 64 to 95.
Files:	    src/Makefile, src/testdir/test64.in, src/testdir/test64.ok,
	    src/testdir/test95.in, src/testdir/test95.ok


*** ../vim-7.3.986/src/Makefile	2013-05-19 19:16:25.000000000 +0200
--- src/Makefile	2013-05-21 13:18:04.000000000 +0200
***************
*** 1861,1866 ****
--- 1861,1879 ----
  		./$$t || exit 1; echo $$t passed; \
  	done
  
+ # Run individual test, assuming that Vim was already compiled.
+ test1 test2 test3 test4 test5 test6 test7 test8 test9 test10 \
+ 	test11 test12 test13 test14 test15 test16 test17 test18 test19 \
+ 	test21 test22 test23 test24 test25 test26 test27 test28 test29 \
+ 	test31 test32 test33 test34 test35 test36 test37 test38 test39 \
+ 	test41 test42 test43 test44 test45 test46 test47 test48 test49 \
+ 	test51 test52 test53 test54 test55 test56 test57 test58 test59 \
+ 	test61 test62 test63 test64 test65 test66 test67 test68 test69 \
+ 	test71 test72 test73 test74 test75 test76 test77 test78 test79 \
+ 	test81 test82 test83 test84 test85 test86 test87 test88 test89 \
+ 	test91 test92 test93 test94 test95 test96 test97 test98 test99:
+ 	cd testdir; rm $@.out; $(MAKE) -f Makefile $@.out VIMPROG=../$(VIMTARGET)
+ 
  testclean:
  	cd testdir; $(MAKE) -f Makefile clean
  	if test -d $(PODIR); then \
*** ../vim-7.3.986/src/testdir/test64.in	2013-05-21 00:02:54.000000000 +0200
--- src/testdir/test64.in	2013-05-21 13:23:27.000000000 +0200
***************
*** 262,271 ****
  :call add(tl, ['[a-zA-Z]', 'a', 'a'])
  :call add(tl, ['[A-Z]', 'a'])
  :call add(tl, ['\C[^A-Z]\+', 'ABCOIJDEOIFNSD jsfoij sa', ' jsfoij sa'])
- :call add(tl, ['\i\+', '&*§xx ', 'xx'])
- :call add(tl, ['\%#=1\i\+', '&*§xx ', 'xx'])
- :call add(tl, ['\f\+', '&*fname ', 'fname'])
- :call add(tl, ['\%#=1\i\+', '&*fname ', 'fname'])
  
  :"""" Tests for \z features
  :call add(tl, ['xx \ze test', 'xx '])					" must match after \ze
--- 262,267 ----
***************
*** 290,302 ****
  
  :"""" Combining different tests and features
  :call add(tl, ['[[:alpha:]]\{-2,6}', '787abcdiuhsasiuhb4', 'ab'])
- :call add(tl, ['[^[=a=]]\+', 'ddaãâbcd', 'dd'])
  :call add(tl, ['', 'abcd', ''])
  :call add(tl, ['\v(())', 'any possible text', ''])
  :call add(tl, ['\v%(ab(xyz)c)', '   abxyzc ', 'abxyzc', 'xyz'])
  :call add(tl, ['\v(test|)empty', 'tesempty', 'empty', ''])
  :call add(tl, ['\v(a|aa)(a|aa)', 'aaa', 'aa', 'a', 'a'])
  
  
  :"""" Run the tests
  
--- 286,303 ----
  
  :"""" Combining different tests and features
  :call add(tl, ['[[:alpha:]]\{-2,6}', '787abcdiuhsasiuhb4', 'ab'])
  :call add(tl, ['', 'abcd', ''])
  :call add(tl, ['\v(())', 'any possible text', ''])
  :call add(tl, ['\v%(ab(xyz)c)', '   abxyzc ', 'abxyzc', 'xyz'])
  :call add(tl, ['\v(test|)empty', 'tesempty', 'empty', ''])
  :call add(tl, ['\v(a|aa)(a|aa)', 'aaa', 'aa', 'a', 'a'])
  
+ :"""" \%u and friends
+ :call add(tl, ['\%d32', 'yes no', ' '])
+ :call add(tl, ['\%o40', 'yes no', ' '])
+ :call add(tl, ['\%x20', 'yes no', ' '])
+ :call add(tl, ['\%u0020', 'yes no', ' '])
+ :call add(tl, ['\%U00000020', 'yes no', ' '])
  
  :"""" Run the tests
  
*** ../vim-7.3.986/src/testdir/test64.ok	2013-05-21 00:02:54.000000000 +0200
--- src/testdir/test64.ok	2013-05-21 13:23:37.000000000 +0200
***************
*** 203,212 ****
  OK - [a-zA-Z]
  OK - [A-Z]
  OK - \C[^A-Z]\+
- OK - \i\+
- OK - \%#=1\i\+
- OK - \f\+
- OK - \%#=1\i\+
  OK - xx \ze test
  OK - abc\zeend
  OK - abc\zsdd
--- 203,208 ----
***************
*** 225,234 ****
  OK - .*John\&.*Bob
  OK - \v(test1)@=.*yep
  OK - [[:alpha:]]\{-2,6}
- OK - [^[=a=]]\+
  OK - 
  OK - \v(())
  OK - \v%(ab(xyz)c)
  OK - \v(test|)empty
  OK - \v(a|aa)(a|aa)
  192.168.0.1
--- 221,234 ----
  OK - .*John\&.*Bob
  OK - \v(test1)@=.*yep
  OK - [[:alpha:]]\{-2,6}
  OK - 
  OK - \v(())
  OK - \v%(ab(xyz)c)
  OK - \v(test|)empty
  OK - \v(a|aa)(a|aa)
+ OK - \%d32
+ OK - \%o40
+ OK - \%x20
+ OK - \%u0020
+ OK - \%U00000020
  192.168.0.1
*** ../vim-7.3.986/src/testdir/test95.in	2013-05-21 13:05:05.000000000 +0200
--- src/testdir/test95.in	2013-05-21 13:24:19.000000000 +0200
***************
*** 7,13 ****
  STARTTEST
  :so small.vim
  :so mbyte.vim
! :set encoding=utf-8 viminfo+=nviminfo
  :" tl is a List of Lists with:
  :"    regexp pattern
  :"    text to test the pattern on
--- 7,13 ----
  STARTTEST
  :so small.vim
  :so mbyte.vim
! :set nocp encoding=utf-8 viminfo+=nviminfo
  :" tl is a List of Lists with:
  :"    regexp pattern
  :"    text to test the pattern on
***************
*** 29,34 ****
--- 29,43 ----
  :" this is not a normal "i" but 0xec
  :call add(tl, ['\p\+', 'ìa', 'ìa'])
  
+ :"""" Test recognition of some character classes
+ :call add(tl, ['\i\+', '&*§xx ', 'xx'])
+ :call add(tl, ['\%#=1\i\+', '&*§xx ', 'xx'])
+ :call add(tl, ['\f\+', '&*fname ', 'fname'])
+ :call add(tl, ['\%#=1\i\+', '&*fname ', 'fname'])
+ 
+ :"""" Combining different tests and features
+ :call add(tl, ['[^[=a=]]\+', 'ddaãâbcd', 'dd'])
+ 
  :"""" Run the tests
  
  :"
*** ../vim-7.3.986/src/testdir/test95.ok	2013-05-21 12:34:13.000000000 +0200
--- src/testdir/test95.ok	2013-05-21 13:24:23.000000000 +0200
***************
*** 5,7 ****
--- 5,12 ----
  OK -  [^ ]\+
  OK - [ม[:alpha:][=a=]]\+
  OK - \p\+
+ OK - \i\+
+ OK - \%#=1\i\+
+ OK - \f\+
+ OK - \%#=1\i\+
+ OK - [^[=a=]]\+
*** ../vim-7.3.986/src/version.c	2013-05-21 13:05:05.000000000 +0200
--- src/version.c	2013-05-21 13:27:12.000000000 +0200
***************
*** 730,731 ****
--- 730,733 ----
  {   /* Add new patch number below this line */
+ /**/
+     987,
  /**/

-- 
An SQL statement walks into a bar.  He approaches two tables
and says, "Mind if I join you?"

 /// Bram Moolenaar -- Bram@Moolenaar.net -- http://www.Moolenaar.net   \\\
///        sponsor Vim, vote for features -- http://www.Vim.org/sponsor/ \\\
\\\  an exciting new programming language -- http://www.Zimbu.org        ///
 \\\            help me help AIDS victims -- http://ICCF-Holland.org    ///
